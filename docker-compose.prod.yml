version: '3'
services:
  minio:
    image: quay.io/minio/minio:RELEASE.2023-11-01T01-57-10Z-cpuv1
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data1:/data1
      - ./data2:/data2
      - ./data3:/data3
      - ./data4:/data4
      - ./cors.json:/config/cors.json   # Mount the CORS configuration file
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    command:
      - server
      - /data1
      - /data2
      - /data3
      - /data4
      - --console-address
      - ":9001"
    entrypoint:
      - /bin/sh
      - -c
      - |
        minio server /data1 /data2 /data3 /data4 --console-address ":9001" &
        sleep 5
        mc alias set myminio http://127.0.0.1:9000 minioadmin minioadmin
        mc admin bucket remote set myminio mybucket cors=/config/cors.json
        fg
    restart: always

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: damu_main
      POSTGRES_USER: damu
      POSTGRES_PASSWORD: damu007
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

  app:
    build: .
    restart: always
    ports:
      - "8000:8000"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/damu_main
      SPRING_DATASOURCE_USERNAME: damu
      SPRING_DATASOURCE_PASSWORD: damu007
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - minio
      - postgres
volumes:
  minio-data:
  postgres-data: